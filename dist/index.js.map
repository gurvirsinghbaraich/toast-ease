{"version":3,"sources":["../src/index.tsx","../src/state.ts"],"sourcesContent":["import React from \"react\";\nimport { state } from \"./state\";\n\nexport const ToastBox = function () {\n  return (\n    <section className=\"absolute w-screen h-screen bg-transparent overflow-hidden top-0 left-0 bottom-0 right-0 z-[999] pointer-events-none\">\n      <div className=\"relative w-screen h-screen\">\n        <ol\n          className=\"absolute bottom-0 right-0 p-4\"\n          id=\"server-toast-container\"\n        >\n          <script\n            dangerouslySetInnerHTML={{\n              __html: `\n                const toastsContainer = document.getElementById(\"server-toast-container\");\n                const toasts = JSON.parse(\\`${JSON.stringify(state.globalToasts)}\\`); \n\n                toasts.map((toast) => {\n                  toastsContainer.innerHTML += \\`\n                    <li data-toast-key=\\${toast.id} className=\"toast\">\n                      \\${toast.title}\n                    </li>\n                  \\`\n                })\n              `,\n            }}\n          ></script>\n        </ol>\n      </div>\n    </section>\n  );\n};\nexport { toast } from \"./state\";\n","import { nanoid } from \"nanoid\";\nimport {\n  SubscriberFn,\n  Toast,\n  ToastIndicator,\n  ToastInternalProperties,\n  Toasts,\n} from \"./types\";\n\nclass Observable {\n  private toasts: Toasts;\n  private subscribers: Array<SubscriberFn>;\n\n  get globalToasts() {\n    return this.toasts;\n  }\n\n  public constructor() {\n    this.toasts = [];\n    this.subscribers = [];\n  }\n\n  /**\n   * The function allows entities to register a subscriber that\n   * allows entities to listen to changes in state.\n   */\n  public subscribe(subscriberFn: SubscriberFn) {\n    this.subscribers.push(subscriberFn);\n  }\n\n  /**\n   * The function is responsible for notifying the subscriber\n   * that a new toast has been added.\n   *\n   * NOTE: the state is managed by the subscribers and independent of the\n   * global state.\n   *\n   */\n  public createToast(\n    toast: Omit<Toast, ToastInternalProperties>,\n    indicator: ToastIndicator\n  ) {\n    const { description, title } = toast;\n\n    const toastObject: Toast = {\n      id: nanoid(),\n      dismisable: false,\n\n      title,\n      indicator,\n      description,\n      duration: Infinity,\n    };\n\n    // Adding the toast to the global state.\n    this.toasts = [toastObject, ...this.toasts];\n\n    // Notifying the subscribers about the creation of the toast.\n    this.subscribers.forEach((subscriber) => {\n      subscriber(toastObject);\n    });\n  }\n}\nexport const state = new Observable();\n\nconst basicCreateFn =\n  (indicator: ToastIndicator = ToastIndicator.info) =>\n  (toast: Omit<Toast, ToastInternalProperties>) =>\n    state.createToast(toast, indicator);\n\nexport const toast = Object.assign(basicCreateFn(), {\n  info: basicCreateFn(ToastIndicator.info),\n  warn: basicCreateFn(ToastIndicator.warn),\n  error: basicCreateFn(ToastIndicator.error),\n  success: basicCreateFn(ToastIndicator.success),\n});\n"],"mappings":"0jBAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,cAAAE,EAAA,UAAAC,IAAA,eAAAC,EAAAJ,GAAA,IAAAK,EAAkB,oBCAlB,IAAAC,EAAuB,kBASvB,IAAMC,EAAN,KAAiB,CAIf,IAAI,cAAe,CACjB,OAAO,KAAK,MACd,CAEO,aAAc,CACnB,KAAK,OAAS,CAAC,EACf,KAAK,YAAc,CAAC,CACtB,CAMO,UAAUC,EAA4B,CAC3C,KAAK,YAAY,KAAKA,CAAY,CACpC,CAUO,YACLC,EACAC,EACA,CACA,GAAM,CAAE,YAAAC,EAAa,MAAAC,CAAM,EAAIH,EAEzBI,EAAqB,CACzB,MAAI,UAAO,EACX,WAAY,GAEZ,MAAAD,EACA,UAAAF,EACA,YAAAC,EACA,SAAU,GACZ,EAGA,KAAK,OAAS,CAACE,EAAa,GAAG,KAAK,MAAM,EAG1C,KAAK,YAAY,QAASC,GAAe,CACvCA,EAAWD,CAAW,CACxB,CAAC,CACH,CACF,EACaE,EAAQ,IAAIR,EAEnBS,EACJ,CAACN,WACAD,GACCM,EAAM,YAAYN,EAAOC,CAAS,EAEzBD,EAAQ,OAAO,OAAOO,EAAc,EAAG,CAClD,KAAMA,QAAiC,EACvC,KAAMA,QAAiC,EACvC,MAAOA,SAAkC,EACzC,QAASA,WAAoC,CAC/C,CAAC,EDxEM,IAAMC,EAAW,UAAY,CAClC,OACE,EAAAC,QAAA,cAAC,WAAQ,UAAU,uHACjB,EAAAA,QAAA,cAAC,OAAI,UAAU,8BACb,EAAAA,QAAA,cAAC,MACC,UAAU,gCACV,GAAG,0BAEH,EAAAA,QAAA,cAAC,UACC,wBAAyB,CACvB,OAAQ;AAAA;AAAA,8CAEwB,KAAK,UAAUC,EAAM,YAAY,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAUpE,EACD,CACH,CACF,CACF,CAEJ","names":["src_exports","__export","ToastBox","toast","__toCommonJS","import_react","import_nanoid","Observable","subscriberFn","toast","indicator","description","title","toastObject","subscriber","state","basicCreateFn","ToastBox","React","state"]}